package com.github.brucemig.customer;import com.github.brucemig.amqp.RabbitMQMessageProducer;import com.github.brucemig.clients.fraud.FraudCheckResponse;import com.github.brucemig.clients.fraud.FraudClient;import com.github.brucemig.clients.notification.NotificationRequest;import org.springframework.stereotype.Service;@Servicepublic record CustomerService(CustomerRepository customerRepository,                              FraudClient fraudClient,                              RabbitMQMessageProducer rabbitMQMessageProducer                              ) {    public void registerCustomer(CustomerRegistrationRequest request) {        Customer customer = Customer.builder()                .firstName(request.firstName())                .lastName(request.lastName())                .email(request.email())                .build();        // todo: check if email valid        // todo: check if email not taken        customerRepository.saveAndFlush(customer);        // todo: check if fraudster        FraudCheckResponse fraudCheckResponse = fraudClient.isFraudster(customer.getId());        if (fraudCheckResponse.isFraudster()) {            throw new IllegalStateException("fraudster");        }        NotificationRequest notificationRequest = new NotificationRequest(                customer.getId(),                customer.getEmail(),                String.format("Hi %s, welcome to Bruce's fraud-detection microservices", customer.getFirstName())        );        rabbitMQMessageProducer.publish(                notificationRequest,                "internal.exchange",                "internal.notification.routing-key"                );    }}